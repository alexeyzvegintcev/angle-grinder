(function() {
    var Alerts, alerts;
    alerts = angular.module("angleGrinder.alerts", []);
    alerts.value("alertTimeout", 3e3);
    Alerts = function() {
        Alerts.$inject = [ "$log", "$timeout", "alertTimeout" ];
        function Alerts($log, $timeout, alertTimeout) {
            this.$log = $log;
            this.$timeout = $timeout;
            this.alertTimeout = alertTimeout;
            this.lastId = 0;
            this.messages = [];
            this.typedAlertTimeouts = {};
        }
        Alerts.prototype.nextId = function() {
            return this.lastId += 1;
        };
        Alerts.prototype.push = function(type, text) {
            var id;
            id = this.nextId();
            this.$log.info("Alert [" + id + ", " + type + "]", text);
            this.messages.push({
                "id": id,
                "type": type,
                "text": text
            });
            this.delayedDispose(id);
            return id;
        };
        Alerts.prototype.info = function(text) {
            return this.push("info", text);
        };
        Alerts.prototype.error = function(text) {
            return this.push("error", text);
        };
        Alerts.prototype.setTimeout = function(type, delay) {
            return this.typedAlertTimeouts[type] = delay;
        };
        Alerts.prototype.dispose = function(id) {
            var at;
            at = _(this.messages.map(function(message) {
                return message.id;
            })).indexOf(id);
            return this.messages.splice(at, 1);
        };
        Alerts.prototype.getType = function(id) {
            var message;
            return function() {
                var _i, _len, _ref, _results;
                _ref = this.messages;
                _results = [];
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                    message = _ref[_i];
                    if (message.id === id) {
                        _results.push(message.type);
                    }
                }
                return _results;
            }.call(this)[0];
        };
        Alerts.prototype.getTimeout = function(id) {
            return this.typedAlertTimeouts[this.getType(id)] || this.alertTimeout;
        };
        Alerts.prototype.delayedDispose = function(id) {
            var disposeTheAlert, timeout;
            timeout = this.getTimeout(id);
            if (timeout != null && timeout > 0) {
                disposeTheAlert = function(_this) {
                    return function() {
                        _this.$log.info("Disposing alert", id, "after", _this.alertTimeout, "milliseconds");
                        return _this.dispose(id);
                    };
                }(this);
                return this.$timeout(disposeTheAlert, timeout);
            }
        };
        return Alerts;
    }();
    alerts.service("alerts", Alerts);
    alerts.controller("alerts", [ "$scope", "alerts", function($scope, alerts) {
        $scope.alertMessages = alerts.messages;
        $scope.disposeAlert = function(id) {
            return alerts.dispose(id);
        };
        return $scope.setTimeout = function(timeout) {
            if (timeout["default"]) {
                alerts.alertTimeout = timeout["default"];
            }
            if (timeout.info) {
                alerts.setTimeout("info", timeout.info);
            }
            if (timeout.error) {
                return alerts.setTimeout("error", timeout.error);
            }
        };
    } ]);
    alerts.directive("agAlerts", function() {
        return {
            "link": function(scope, element, attrs) {
                scope.setTimeout({
                    "default": attrs.timeout,
                    "info": attrs.infoTimeout,
                    "error": attrs.errorTimeout
                });
                if (!!attrs.fixed) {
                    return scope.fixed = attrs.fixed;
                }
            },
            "restrict": "E",
            "replace": true,
            "template": '<aside id="alerts">\n  <div ng-repeat="message in alertMessages" ng-class="{\'fixed-alert\': !!fixed}" class="alert alert-{{message.type}}" style="margin-top: {{fixed || 0}}px ;top: {{50 * $index}}px">\n    <button ng-click="disposeAlert(message.id)" type="button" class="close">\xd7</button>\n    <strong>{{message.type}}</strong> <span>{{message.text}}</span>\n  </div>\n</aside>',
            "controller": "alerts"
        };
    });
}).call(this);

(function() {
    var spinner;
    spinner = angular.module("angleGrinder.spinner", [ "angleGrinder.common" ]);
    spinner.directive("agSpinner", function() {
        return {
            "replace": true,
            "restrict": "E",
            "controller": [ "$scope", "pendingRequests", function($scope, pendingRequests) {
                return $scope.showSpinner = function() {
                    return pendingRequests.any();
                };
            } ],
            "template": '<li class="spinner">\n  <a href="#"><i ng-class="{spin: showSpinner()}"></i></a>\n</li>'
        };
    });
}).call(this);